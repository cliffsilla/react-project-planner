{"version":3,"sources":["components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/layout/SignInLinks.js","store/actions/authActions.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Notifications","props","notifications","react_default","a","createElement","className","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Link","to","Dashboard","_this$props","this","auth","uid","Redirect","Component","compose","connect","state","firestore","ordered","firebase","firestoreConnect","collection","orderBy","limit","dispatch","signOut","getState","_ref2","getFirebase","then","type","NavLink","onClick","profile","initials","SignOutLinks","console","log","links","layout_SignInLinks","layout_SignOutLinks","ownProps","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","defineProperty","target","value","inherits","createClass","authErr","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f579c8ec.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nexport default function Notifications(props) {\n  const {notifications} = props;\n  return (\n   <div className=\"section\">\n    <div className=\"card z-depth-1\">\n      <div className=\"card-content\">\n        <div className=\"card-title\">Notifications</div>\n        <ul className=\"notifications\">\n          {notifications && notifications.map(item => {\n            return (\n              <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n   </div>\n  )\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default function ProjectSummary({project}) {\n  return (\n    <div className=\"card z-depth-1 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n            <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n    </div>\n\n  )\n}\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary';\nimport {Link} from 'react-router-dom';\n\nexport default function ProjectList({projects}) {\n  return (\n    <div className=\"project-list section\">\n      {projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n          \n        )\n      })}\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n\n    const {projects, auth, notifications} = this.props;\n    if(!auth.uid) return <Redirect to='/signin'/>\n    \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n            <div className=\"col s12 m6\">\n                <ProjectList projects={projects}/>\n            </div>\n            <div className=\"col s12 m5 offset-m1\">\n                <Notifications notifications={notifications} />\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state)=> {\n return {\n   projects: state.firestore.ordered.projects,\n   auth: state.firebase.auth,\n   notifications: state.firestore.ordered.notifications\n }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {collection: 'projects', orderBy: ['createdAt','desc']},\n    {collection: 'notifications', limit:5, orderBy: ['time','desc']}\n  ])\n)(Dashboard)\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignInLinks = (props) => {\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <ul className=\"right\">\n                <li><NavLink to='/create'>Create Project</NavLink></li>\n                <li><button className=\"btn\" onClick={props.signOut}>Log Out</button></li>\n                <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n                    {props.profile.initials}\n                </NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps)(SignInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err});\n        })\n    }\n}\n\nexport const signOut = () => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'});\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(response => {\n        return firestore.collection(\"users\").doc(response.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst SignOutLinks = () => {\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <ul className=\"right\">\n                <li><NavLink to='/signup'>Sign Up</NavLink></li>\n                <li><NavLink to='/signin'>Log In</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default SignOutLinks","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignInLinks from './SignInLinks';\nimport SignOutLinks from './SignOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    //console.log(auth);\n    const links = auth.uid ? <SignInLinks profile={profile}/>:<SignOutLinks />\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo left\">Project Planner</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {Redirect} from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\nconst{project, auth}=props;\nif(!auth.uid) return <Redirect to='/signin' />\n  if(project){\n    return (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-1\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Project Title - {project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n      )\n  }else{\n    return (\n        <div className=\"container center\">\n          <p>Loading project...</p>\n        </div>\n      )\n  }\n  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id]:null;\n    return{\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{\n        collection:'projects'\n    }])\n)(ProjectDetails);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport {Redirect} from 'react-router-dom';\n\nexport class SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]:e.target.value\n    })\n  }\n\n  render() {\n    const { authErr, auth } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white z-depth-1\">\n           <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n           <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n           </div> \n           <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n           </div>\n           <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-1\">Login</button>\n           </div>\n           <div className=\"red-text center\">\n            {authErr? <p>{authErr}</p>: null}\n           </div> \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authErr: state.auth.authErr,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => { dispatch(signIn(creds)) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signUp} from '../../store/actions/authActions';\n\nexport class SignUp extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]:e.target.value\n    })\n  }\n\n  render() {\n    const {auth, authErr} = this.props;\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white z-depth-1\">\n           <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n           <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n           </div>\n           <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n           </div>\n           <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n           </div> \n           <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n           </div>\n           <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-1\">Sign Up</button>\n           </div>\n           <div className=\"red-text center\">\n            {authErr? <p>{authErr}</p>:null}\n           </div> \n        </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth,\n    authErr: state.auth.authErr\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nexport class CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]:e.target.value\n    })\n  }\n\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n           <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n           <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n           </div> \n           <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n           </div>\n           <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n           </div> \n        </form>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //make asyc database call\n        const firestore = getFirestore();\n        const authorId = getState().firebase.auth.uid;\n        const profile = getState().firebase.profile;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispatch({type:'CREATE_PROJECT_ERR', err})\n        })\n        dispatch({type: 'CREATE_PROJECT', project})\n    }\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard'\nimport Navbar from './components/layout/Navbar';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authErr: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('Login Error');\n            return {\n                ...state,\n                authErr: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login Success');\n            return {\n                ...state,\n                authErr: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('Signed Out');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('SignUp Success');\n            return {\n                ...state,\n                authErr:null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('SignUp Error');\n            return{\n                ...state,\n                authErr: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n      ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERR':\n            console.log('Error ', action.err);\n            return state;\n        default:\n            return state;\n    }\n    \n}\n\nexport default projectReducer;","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;"," import firebase from \"firebase/app\";\n import 'firebase/firestore';\n import 'firebase/auth';\n\n // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyDPGytcFHZ1UHeazESQH0on5U7uknX4s1I\",\n    authDomain: \"project-planner-47c26.firebaseapp.com\",\n    databaseURL: \"https://project-planner-47c26.firebaseio.com\",\n    projectId: \"project-planner-47c26\",\n    storageBucket: \"project-planner-47c26.appspot.com\",\n    messagingSenderId: \"938576190960\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots:true});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport {getFirestore, reduxFirestore} from 'redux-firestore';\nimport {getFirebase, reactReduxFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n            applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n            reduxFirestore(fbConfig), //redux binding for firestore\n            reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady:true}) //redux bindings for firebase\n        )\n    );\n store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n })\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}